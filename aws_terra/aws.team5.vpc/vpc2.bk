# Configure the AWS Provider
provider "aws" {
  region  = "us-gov-west-1"
  profile = "eddiecisneros"
}

terraform {
  required_providers {
    aws = {
      source  = "hashicorp/aws"
      version = "~> 4.0"
    }
  }
  backend "s3" {
    bucket = "terraformstateplayground"
    key    = "VPCsubnet/vpc-template/vpc-template"
    region = "us-gov-west-1"
  }

}

data "aws_availability_zones" "available" {}

data "aws_subnets" "pub-subnet" {
  /*
  filter {
    name   = "tag:Name"
    values = ["PrivateSubnet"]
  }
*/
}
output "subnet_ids" {
  value = data.aws_subnets.pub-subnet.id
}

data "aws_subnet" "pub_subnet" {
  count = length(data.aws_subnets.pub-subnet.ids)
  id    = tolist(data.aws_subnets.pub-subnet.ids)[count.index]
}

resource "aws_vpc" "k8_MITRE_VPC" {
  cidr_block = "10.0.0.0/16"
  tags = {
    Name = "k8_MITRE_VPC"
  }
}

resource "aws_internet_gateway" "internet-gateway" {
  vpc_id = aws_vpc.k8_MITRE_VPC.id
  tags = {
    Name = "Internet-gateway"
  }

}

resource "aws_subnet" "public_subnet" {
  count                   = length(data.aws_availability_zones.available.names)
  vpc_id                  = aws_vpc.k8_MITRE_VPC.id
  cidr_block              = "10.0.${10 + count.index}.0/24"
  availability_zone       = data.aws_availability_zones.available.names[count.index]
  map_public_ip_on_launch = true
  tags = {
    Name = "PublicSubnet"
  }
}

resource "aws_route_table" "public-route-table" {
  vpc_id = aws_vpc.k8_MITRE_VPC.id
  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.internet-gateway.id
  }
  tags = {
    "Name" = "MITREPublicRT"
  }
}

resource "aws_route_table_association" "public-subnet-route_table_associatio" {
  subnet_id      = data.aws_subnets.pub-subnet.ids
  route_table_id = aws_route_table.public-route-table.id
}



resource "aws_subnet" "private_subnet" {
  count                   = length(data.aws_availability_zones.available.names)
  vpc_id                  = aws_vpc.k8_MITRE_VPC.id
  cidr_block              = "10.0.${20 + count.index}.0/24"
  availability_zone       = data.aws_availability_zones.available.names[count.index]
  map_public_ip_on_launch = false
  tags = {
    Name = "PrivateSubnet"
  }

}
